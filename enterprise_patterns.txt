#  Apropos:
- Visit next Web site for a great experience:
  https://earizon.github.io/txt_world_domination/viewer.html?payload=../SoftwareArchitecture/enterprise_patterns.txt

- If you want to contribute to great gistory of this
  document you can take the next flight to:
@[https://www.github.com/earizon/SoftwareArchitecture]
  Your commits and pull-request will be immortalized
  in the Pantheon of the Unicode Gods.
────────────────────────────────────────────────────────────────────────────────


[[{Enterprise_Patterns]]

# ESB Architecture:[[{enterprise_patterns.101,data.integration]]
- Can be defined by next feautes:
  - Monitoring of services/messages passed between them
  - wire Protocol bridge between HTTP, AMQP, SOAP, gRPC, CVS in Filesystem,...
  - Scheduling, mapping, QoS management, error handling, ..
  - Data transformation
  - Data pipelines
  - Mule, JBoss Fuse (Camel + "etc..."), BizTalk, Apache ServiceMix, ...
REF: https://en.wikipedia.org/wiki/Enterprise_service_bus#/media/File:ESB_Component_Hive.png
    ^   Special App. Services
    |
E   |   Process Automation                 BPEL, Workflow
n   |
t   |   Application Adapters               RFC, BABI, IDoc, XML-RPC, ...
e m |
r e |   Application Data Consolidation     MDM, OSCo, ...
p s |
r s |   Application Data Mapping           EDI, B2B
i a |   _______________________________
s g |   Business Application Monitoring
e e |   _______________________________
    |   Traffic Monitoring Cockpit
S c |
e h |   Special Message Services           Ex. Test Tools
r a |
v n |   Web Services                       WSDL, REST, CGI
i n |
c e |   Protocol Conversion                XML, XSL, DCOM, CORBA
e l |
    |   Message Consolidation              N.N (data locks, multi-submit,...)
B   |
u   |   Message Routing                    XI, WBI, BIZTALK, Seeburger
s   |
    |   Message Service                    MQ Series, MSMQ, ...
[[}]]

# Apache NiFi: Data Routing [[{enterprise_patterns,data.integration,architecture.event_stream]]
                            [[01_PM.low_code,ui,architecture.decoupled,kafka,]]
@[https://nifi.apache.org]
- no-code, .drag-and-drop Web-GUI to build pipelines for
  data route+transform (99% NiFi users will never see a line of code)
- Deployed as a standalone application  (vs framework, api or library)
- Support batch ETL but "prefers" data streams.
- Support for binary data and large files ("multi-GB" video files).
- Complex (and performant) transformations, enrichments and normalisations.
- out of the box it supports:
  - Kafka, Elastic, HDFS, S3, Postgres, Mongo, etc.
  - Generic sources/endpoints: TCP, HTTP, IMAP, ...

- scalable directed graphs of data routing/transformation/system mediation logic.
- UI to control design, feedback, monitoring
- natively clustered - it expects (but isn't required) to be deployed on
  multiple hosts that work together as a cluster for
  performance, availability and redundancy.

- Highly configurable:
  - Loss tolerant vs guaranteed delivery
  - Low latency vs high throughput
  - Dynamic prioritization
  - Flow can be modified at runtime
  - Back pressure
- Data Provenance
  - Track dataflow from beginning to end
- Designed for extension
  - Build your own processors and more
  - Enables rapid development and
    effective testing
- Secure
  - SSL, SSH, HTTPS, encrypted content, etc...
  - Multi-tenant authorization and internal
    authorization/policy management

- DevOps:
@[https://dzone.com/articles/setting-apache-nifi-on-docker-containers]
REFS:
- NiFi+Spark:
@[https://blogs.apache.org/nifi/entry/stream_processing_nifi_and_spark"]

- Nifi "vs" Cammel: [comparative]
@[https://stackoverflow.com/questions/65625166/apache-camel-vs-apache-nifi]
[[}]]

# GraphQL Engine: [[{data.analytics,01_PM.low_code,_PM.TODO]]
• Blazing fast, instant realtime GraphQL APIs for DB with fine
  grained access control, also trigger webhooks on database events.
• POLE POSITION in GitHub for Top 32 Automatic Api Open Source Projects on Github (
  https://awesomeopensource.com/projects/automatic-api

• Ex:
  PostgreSQL data                   GraphQL subscription                      UI (Web, Mobile, ...)

  ORDERS TABLE                       subscription fetchOrder {    ·········─→ event pushed to update UI
  ==============================       orders ( where:
  order_id  payment   dispatched                 {id: {_eq: 'XX_11'}}) {
  ---------+--------+-----------         id
  XX-11     true      true               payment
  ---------+--------+-----------         dispatched
  ...                                  }
                                     }
[[}]]

# NoCoDB: DDBB to spreedsheet:  [[{data.analytics,01_PM.low_code,_PM.TODO]]
@[https://www.nocodb.com/]
• Second position in GitHub for Top 32 Automatic Api Open Source Projects on Github (

https://awesomeopensource.com/projects/automatic-api
• Open Source "Airtable Alternative"
• Turns any database into a smart spreadsheet.
[[}]]

# Metabase [[{db_engine,data.analytics,01_PM.low_code,_PM.TODO]]
https://github.com/metabase/metabase
• simplest way to get business intelligence and analytics from a DDBB to everyone.
• Low-code chart (including geo-map) generation.
[[}]]

# Datasette.io [[{db_engine,data.analytics,01_PM.low_code,_PM.TODO]]
• Spin up a JSON API for any data in minutes.
• Prototype and prove your ideas without building a custom backend.
[[}]]

# Redash:  [[{db_engine,data.analytics,01_PM.low_code,_PM.TODO]]
- "Make your company Data Driven"
- Redash is designed to enable anyone, regardless of the level of
  technical sophistication, to harness the power of data big and small.
  SQL users leverage Redash to explore, query, visualize, and share
  data from any data sources. Their work in turn enables anybody in
  their organization to use the data. Every day, millions of users at
  thousands of organizations around the world use Redash to develop
  insights and make data-driven decisions.
- Supported DDBBs:
  Amazon Athena                     MemSQL
  Amazon DynamoDB                   Microsoft Azure Data Warehouse / Synapse
  Amazon Redshift                   Microsoft Azure SQL Database
  Axibase Time Series Database      Microsoft SQL Server
  Cassandra                         MongoDB
  ClickHouse                        MySQL
  CockroachDB                       Oracle
  CSV                               PostgreSQL
  Databricks (Apache Spark)         Presto
  DB2 by IBM                        Prometheus
  Druid                             Python
  Elasticsearch                     Qubole
  Google Analytics                  Rockset
  Google BigQuery                   Salesforce
  Google Spreadsheets               ScyllaDB
  Graphite                          Shell Scripts
  Greenplum                         Snowflake
  Hive                              SQLite
  Impala                            TiDB
  InfluxDB                          TreasureData
  JIRA                              Vertica
  JSON                              Yandex AppMetrrica
  Apache Kylin                      Yandex Metrica
  OmniSciDB (Formerly MapD)
[[}]]

# Business Data charts: [[{enterprise_patterns.101]]
@[https://www.forbes.com/sites/bernardmarr/2017/07/20/the-7-best-data-visualization-tools-in-2017/#643a48726c30]

• Apache Superset:
  @[https://www.phoronix.com/scan.php?page=news_item&px=Apache-Superset-Top-Level]
  Superset is the project's big data visualization and business
  intelligence web solution. Apache Superset allows for big data
  exploration and visualization with data from a variety of databases
  ranging from SQLite and MySQL to Amazon Redshift, Google BigQuery,
  Snowflake, Oracle Database, IBM DB2, and a variety of other
  compatible data sources.
  Python based.

  Superset is also cloud-native in the sense that it is flexible and
  lets you choose the:
  - web server (Gunicorn, Nginx, Apache),
  - metadata database engine (MySQL, Postgres, MariaDB, etc),
  - message queue (Redis, RabbitMQ, SQS, etc),
  - results backend (S3, Redis, Memcached, etc),
  - caching layer (Memcached, Redis, etc),

  Superset also works well with services like NewRelic, StatsD and
  DataDog.

• Low-Level Data charts:
  | Kibana  (TODO)
  |- "A Picture's Worth a Thousand Log Lines"
  |- visualize (Elasticsearch) data and navigate
  |  the Elastic Stack, learning  understanding
  |  the impact rain might have on your quarterly
  |  numbers

• Grafana  (TODO)
@[https://grafana.com/]
  - time series analytics
  - Integrates with Prometheus queries
  @[https://logz.io/blog/grafana-vs-kibana/]
  - 7.0+ includes new plugin architecture, visualizations,
    transformations, native trace support, ...
  https://grafana.com/blog/2020/05/18/grafana-v7.0-released-new-plugin-architecture-visualizations-transformations-native-trace-support-and-more/
[[}]]


# TOGAF  [[{enterprise_patterns,01_PM.TODO]]
@[https://en.wikipedia.org/wiki/The_Open_Group_Architecture_Framework]
The Open Group Architecture Framework (TOGAF) is a framework for enterprise
architecture that provides an approach for designing, planning, implementing,
and governing an enterprise information technology architecture.[2] TOGAF is
a high level approach to design. It is typically modeled at four levels:
Business, Application, Data, and Technology. It relies heavily on
modularization, standardization, and already existing, proven technologies and
products.

TOGAF was developed starting 1995 by The Open Group, based on DoD's TAFIM. As
of 2016, The Open Group claims that TOGAF is employed by 80% of Global 50
companies and 60% of Fortune 500 companies.[3]

Summary from @[https://www.redhat.com/architect/TOGAF-importance]
• organization created in 1996. 850-global members as of 2021-11
  advancing in technology standards services, certifications,
  research, and training.
• The Open Group is behind many world-class architectural and digital
  standards, including:
  - Open Agile Architecture (O-AA) Standard
  - ArchiMate Modeling Language
  - Certifying body for the Unix trademark.
  - developing and management of the
    Open Group Architecture Framework (TOGAF)
    key industry-standard for enterprise architecture.
    ( more than 110,000 TOGAF certifications issued in 155 countries)

 "... organizations are finding the need to pull these disparate
  projects together and are turning to TOGAF Standard and enterprise
  architecture as the most proven and reliable methodology of achieving
  this. Understanding and managing that big picture of an enterprise
  has always been at the heart of TOGAF Standard, and it will be
  exciting to see how practitioners apply it to this next stage of
  digitalization ...."

  "... What TOGAF doesn't do is tell you how to do your job:
   TOGAF doesn't give us a playbook, instead, it realigns the way we
   solve problems into a common framework, approach, and a language that
   can be communicated across a team of architects, a practice, an
   industry, and across our profession."

   "...TOGAF works because it provides a framework to identify and promote
    validated patterns across an evolving set of customer and
    industry-specific architectures that are then evolved into deployable
    solution blueprints."
[[}]]

# KOGITO: [[{01_PM.low_code,architecture,01_PM.TODO]]
@[http://kie.org/]

# Kogito == Drools + jBPM + OptaPlanner
# Drools
  - Drools is a business rule management system with a
    forward-chaining and backward-chaining inference based rules engine,
    allowing fast and reliable evaluation of business rules and complex
    event processing.
    Also use in other projects like https://www.shopizer.com/, and OOSS
    java ecommerce solution based on Spring/Hibernate/Drools/Elastic.

# jBPM
@[https://www.jbpm.org/]
  - toolkit for building business applications to help automate business
    processes and decisions.
  - jBPM originates from BPM (Business Process Management) but it has
    evolved to enable users to pick their own path in business
    automation. It provides various capabilities that simplify and
    externalize business logic into reusable assets such as cases,
    processes, decision tables and more.
    - business processes (BPMN2)
    - case management (BPMN2 and CMMN)
    - decision management (DMN)
    - business rules (DRL)
    - business optimisation (Solver)

  - jBPM can be used as standalone service or embedded in custom
    service. It does not mandate any of the frameworks to be used, it can
    be successfully used in
    - traditional JEE applications - war/ear deployments
    - SpringBoot, Thorntail, ... deployments
    - standalone java programs

# OptaPlanner              [[{enterprise_patterns.optimization]]
  OptaPlanner is an AI constraint solver. It optimizes planning and
  scheduling problems, such as the Vehicle Routing Problem, Employee
  Rostering, Maintenance Scheduling, Task Assignment, School
  Timetabling, Cloud Optimization, Conference Scheduling, Job Shop
  Scheduling, Bin Packing and many more. Every organization faces such
  challenges: assign a limited set of constrained resources (employees,
  assets, time and/or money) to provide products or services.
  OptaPlanner delivers more efficient plans, which reduce costs and
  improve service quality.  [[}]]
[[}]]
[[Enterprise_Patterns}]]
